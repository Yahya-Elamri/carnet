// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.707
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

func Page(Block templ.Component) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<!doctype html><html lang=\"en\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><script rel=\"preload\" as=\"script\" src=\"https://unpkg.com/htmx.org@1.9.10\" integrity=\"sha384-D1Kt99CQMDuVetoL1lrYwg5t+9QdHe7NLX/SoJYkXDFfX37iInKRy5xLSi8nO7UC\" crossorigin=\"anonymous\"></script><script rel=\"preload\" as=\"script\" src=\"https://unpkg.com/htmx.org/dist/ext/response-targets.js\"></script><script rel=\"preload\" as=\"script\" src=\"https://cdn.tailwindcss.com\"></script><script>\r\n        if (localStorage.getItem('theme') === 'dark') {\r\n            document.documentElement.classList.add('dark');\r\n        } else {\r\n            document.documentElement.classList.remove('dark');\r\n        }\r\n    </script><script>\r\n        tailwind.config = {\r\n            darkMode: 'class',\r\n            theme: {\r\n                extend: {\r\n                    // ... your custom theme extensions\r\n                },\r\n            },\r\n        }\r\n    </script><link rel=\"preconnect\" href=\"https://fonts.googleapis.com\"><link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin><link href=\"https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css\" rel=\"stylesheet\"><link href=\"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&amp;display=swap\" rel=\"stylesheet\"><title>Signe it Faster</title><style>\r\n        .poppins-regular {\r\n            font-family: \"Poppins\", sans-serif;\r\n            font-weight: 400;\r\n            font-style: normal;\r\n        }\r\n        .poppins-medium {\r\n            font-family: \"Poppins\", sans-serif;\r\n            font-weight: 500;\r\n            font-style: normal;\r\n        }\r\n        .poppins-semibold {\r\n            font-family: \"Poppins\", sans-serif;\r\n            font-weight: 600;\r\n            font-style: normal;\r\n        }\r\n        .poppins-bold {\r\n            font-family: \"Poppins\", sans-serif;\r\n            font-weight: 700;\r\n            font-style: normal;\r\n        }\r\n    </style><script>\r\n        document.addEventListener('DOMContentLoaded', () => {\r\n            const themeToggle = document.querySelector('.switch input[type=\"checkbox\"]');\r\n            \r\n            // Set initial theme\r\n            if (localStorage.getItem('theme') === 'dark' || (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {\r\n                document.documentElement.classList.add('dark');\r\n                themeToggle.checked = true;\r\n            } else {\r\n                document.documentElement.classList.remove('dark');\r\n                themeToggle.checked = false;\r\n            }\r\n\r\n            // Function to toggle theme\r\n            window.toggleTheme = function() {\r\n                if (themeToggle.checked) {\r\n                    document.documentElement.classList.add('dark');\r\n                    localStorage.setItem('theme', 'dark');\r\n                } else {\r\n                    document.documentElement.classList.remove('dark');\r\n                    localStorage.setItem('theme', 'light');\r\n                }\r\n            }\r\n        });\r\n    </script></head><body class=\"bg-[#ffffff] dark:bg-[#0F0F0F] text-black dark:text-white\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = Block.Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
