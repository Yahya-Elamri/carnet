// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.707
package register

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"
import "strings"

import (
	"github.com/Yahya-Elamri/signeitfaster/module"
	"github.com/Yahya-Elamri/signeitfaster/views/components"
	//"github.com/Yahya-Elamri/signeitfaster/views/icons"
	"fmt"
	"github.com/Yahya-Elamri/signeitfaster/utils"
)

func BackgroundImage(path, bgsize string) templ.CSSClass {
	var templ_7745c5c3_CSSBuilder strings.Builder
	templ_7745c5c3_CSSBuilder.WriteString(`width:100%;`)
	templ_7745c5c3_CSSBuilder.WriteString(`height:100%;`)
	templ_7745c5c3_CSSBuilder.WriteString(string(templ.SanitizeCSS(`background-image`, fmt.Sprintf("url('/assets%s')", path))))
	templ_7745c5c3_CSSBuilder.WriteString(string(templ.SanitizeCSS(`background-size`, fmt.Sprintf("%s", bgsize))))
	templ_7745c5c3_CSSBuilder.WriteString(`background-position:center;`)
	templ_7745c5c3_CSSBuilder.WriteString(`background-repeat:no-repeat;`)
	templ_7745c5c3_CSSBuilder.WriteString(`overflow:hidden;`)
	templ_7745c5c3_CSSID := templ.CSSID(`BackgroundImage`, templ_7745c5c3_CSSBuilder.String())
	return templ.ComponentCSSClass{
		ID:    templ_7745c5c3_CSSID,
		Class: templ.SafeCSS(`.` + templ_7745c5c3_CSSID + `{` + templ_7745c5c3_CSSBuilder.String() + `}`),
	}
}

func Post(users struct {
	UserId     uint
	Username   string
	ProfileUrl string
}, Communities []module.Communities) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = components.HeaderLogged(users).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"grid grid-cols-1 md:grid-cols-[272px_1fr]\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.SidePanel().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"w-full md:max-w-[calc(100vw-272px)] md:min-h-[calc(100vh-63px)] flex flex-col items-center mx-auto justify-start p-4\"><div class=\"w-[74%] flex flex-col items-start justify-center gap-3 my-5\"><h1 class=\"poppins-semibold text-3xl\">Créer une publication</h1><div class=\"w-full mb-4\"><ul class=\"flex gap-4\"><a href=\"/poster/post\"><li class=\"poppins-medium text-md py-1 border-b-2 border-black dark:border-white cursor-pointer\">Post</li></a> <a href=\"/poster/thread\"><li class=\"poppins-medium text-md py-1 hover:border-b-2 border-black dark:border-white cursor-pointer\">Thread</li></a> <a href=\"/register\"><li class=\"poppins-medium text-md py-1 hover:border-b-2 border-black dark:border-white cursor-pointer\">Annonces à vendre</li></a></ul></div><div class=\"w-[78%] h-full flex flex-col justify-start items-start gap-3\"><div class=\"flex flex-col w-full items-start\"><p class=\"poppins-regular text-sm\">Remplissez le formulaire ci-dessous pour créer une publication.</p></div><div class=\"w-[78%] flex justify-start items-center\"><div class=\"w-full flex flex-col gap-2 items-start\"><style>\r\n                                .form-step {\r\n                                    display: none;\r\n                                }\r\n                                .form-step.active {\r\n                                    display: flex;\r\n                                }\r\n                                .dropzone {\r\n                                    border: 2px dashed #4A5568;\r\n                                    border-radius: 0.375rem;\r\n                                    padding: 2rem;\r\n                                    text-align: center;\r\n                                    cursor: pointer;\r\n                                }\r\n                                .dropzone.dragover {\r\n                                    border-color: #3182CE;\r\n                                    background-color: #EBF8FF;\r\n                                }\r\n                            </style><form hx-post=\"/add-post\" hx-target=\"this\" hx-swap=\"outerHTML\" enctype=\"multipart/form-data\" class=\"w-full flex flex-col fade-in gap-5 justify-between items-start\" method=\"POST\"><!-- Dropdown Button --><div class=\"w-64 relative\" id=\"custom-dropdown\"><button id=\"dropdown-button\" type=\"button\" class=\"w-full p-2 border border-gray-300 dark:border-[#3F3F3F] rounded-md flex items-center justify-between text-left\"><span id=\"selected-option\" class=\"truncate\">Sélectionner la communauté</span> <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 transition-transform\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\"></path></svg></button><!-- Hidden Input to store selected community ID --><input type=\"hidden\" id=\"selectedCommunityID\" name=\"community_id\" value=\"\"><ul id=\"dropdown-options\" class=\"hidden absolute z-10 bg-white dark:bg-[#060809] w-full mt-1 border border-gray-300 dark:border-[#3F3F3F] rounded-md shadow-lg max-h-60 overflow-auto\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		for _, communitie := range Communities {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<li data-id=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var2 string
			templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%d", communitie.CommunityID))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/register/poster.templ`, Line: 73, Col: 97}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" data-value=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var3 string
			templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(communitie.Name)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/register/poster.templ`, Line: 73, Col: 126}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" class=\"cursor-pointer select-none relative py-2 pl-3 pr-9 hover:bg-indigo-600 hover:text-white flex items-center\"><div class=\"flex items-center gap-2\"><div class=\"w-[50px] h-[50px] bg-contain bg-center overflow-hidden rounded-full\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var4 = []any{BackgroundImage(utils.Transform(communitie.CommunitiesMedia)[0], "cover")}
			templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var4...)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var5 string
			templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var4).String())
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/register/poster.templ`, Line: 1, Col: 0}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\"></div></div><div><p class=\"text-lg poppins-semibold\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var6 string
			templ_7745c5c3_Var6, templ_7745c5c3_Err = templ.JoinStringErrs(communitie.Name)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/register/poster.templ`, Line: 79, Col: 108}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var6))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</p><p class=\"text-sm poppins-regular\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var7 string
			templ_7745c5c3_Var7, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%d", communitie.TotalJoined))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/register/poster.templ`, Line: 80, Col: 132}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var7))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" Members</p></div></div></li>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</ul></div><input type=\"hidden\" name=\"user_id\" value=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var8 string
		templ_7745c5c3_Var8, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%d", users.UserId))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/register/poster.templ`, Line: 87, Col: 106}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var8))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\"><div class=\"w-full flex flex-col gap-2\"><textarea class=\"py-[18px] px-2 rounded-xl w-[90%] h-[190px] max-h-[190px] focus:border-none outline-none text-xl poppins-meduim bg-[#eaedef] dark:bg-[#060809]\" id=\"message\" name=\"content\" rows=\"4\" cols=\"50\" maxlength=\"500\" placeholder=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var9 string
		templ_7745c5c3_Var9, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("Dire quelque chose , %s", users.Username))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/register/poster.templ`, Line: 89, Col: 327}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var9))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" oninput=\"updateCounter()\" required></textarea> <span class=\"char-counter w-full flex items-center justify-start\" id=\"charCounter\">0 / 500</span></div><div class=\"w-full flex flex-col gap-2\"><label for=\"file-upload1\" class=\"text-xl poppins-meduim text-[#9DA4B0]\">Photo / Video</label><div id=\"dropzone1\" class=\"dropzone mt-2 p-6 bg-white dark:bg-[#060809] flex items-center justify-center\"><p class=\"poppins-regular text-gray-500\">Drag and drop images here, or click to select files</p><input id=\"file-upload1\" name=\"posts_media\" type=\"file\" class=\"hidden\" multiple></div></div><div class=\"w-full flex flex-col items-start gap-2\"><button class=\"poppins-regular bg-green-500 px-4 py-[12px] w-1/2 rounded-xl text-white hover:bg-green-700\" type=\"submit\">Publier</button></div></form><script>\r\n                                function updateCounter() {\r\n                                const textarea = document.getElementById('message');\r\n                                const counter = document.getElementById('charCounter');\r\n                                counter.textContent = `${textarea.value.length} / 500`;\r\n                                }\r\n                            </script><script>\r\n                                function initializeDropzone(dropzoneId, fileUploadId) {\r\n                                    const dropzone = document.getElementById(dropzoneId);\r\n                                    const fileUpload = document.getElementById(fileUploadId);\r\n\r\n                                    dropzone.addEventListener('click', () => fileUpload.click());\r\n\r\n                                    dropzone.addEventListener('dragover', (event) => {\r\n                                        event.preventDefault();\r\n                                        dropzone.classList.add('dragover');\r\n                                    });\r\n\r\n                                    dropzone.addEventListener('dragleave', () => {\r\n                                        dropzone.classList.remove('dragover');\r\n                                    });\r\n\r\n                                    dropzone.addEventListener('drop', (event) => {\r\n                                        event.preventDefault();\r\n                                        dropzone.classList.remove('dragover');\r\n                                        fileUpload.files = event.dataTransfer.files;\r\n                                        updateFileNames(dropzone, fileUpload);\r\n                                    });\r\n\r\n                                    fileUpload.addEventListener('change', () => {\r\n                                        updateFileNames(dropzone, fileUpload);\r\n                                    });\r\n                                }\r\n                                function updateFileNames(dropzone, fileUpload) {\r\n                                    if (fileUpload.files.length > 0) {\r\n                                        dropzone.querySelector('p').textContent = `${fileUpload.files.length} images sélectionnées`;\r\n                                    } else {\r\n                                        dropzone.querySelector('p').textContent = 'Drag and drop images here, or click to select files';\r\n                                    }\r\n                                }\r\n                                initializeDropzone('dropzone1', 'file-upload1');\r\n                            </script><script>\r\n                                document.addEventListener('DOMContentLoaded', function() {\r\n                                    const dropdownButton = document.getElementById('dropdown-button');\r\n                                    const dropdownOptions = document.getElementById('dropdown-options');\r\n                                    const selectedOption = document.getElementById('selected-option');\r\n                                    const customDropdown = document.getElementById('custom-dropdown');\r\n\r\n                                    function toggleDropdown() {\r\n                                        dropdownOptions.classList.toggle('hidden');\r\n                                        dropdownButton.querySelector('svg').classList.toggle('rotate-180');\r\n                                    }\r\n\r\n                                    dropdownButton.addEventListener('click', function(e) {\r\n                                        e.stopPropagation();\r\n                                        toggleDropdown();\r\n                                    });\r\n\r\n                                    dropdownOptions.addEventListener('click', function(e) {\r\n                                        if (e.target.tagName === 'LI') {\r\n                                            selectedOption.textContent =  e.target.dataset.value;\r\n                                            toggleDropdown();\r\n                                            \r\n                                            // You can add your form logic here, e.g.:\r\n                                            console.log('Selected value:', e.target.dataset.id);\r\n                                            selectedCommunityID.value =  e.target.dataset.id;\r\n                                        }\r\n                                        e.stopPropagation();\r\n                                    });\r\n\r\n                                    // Close dropdown when clicking outside\r\n                                    document.addEventListener('click', function(e) {\r\n                                        if (!customDropdown.contains(e.target)) {\r\n                                            dropdownOptions.classList.add('hidden');\r\n                                            dropdownButton.querySelector('svg').classList.remove('rotate-180');\r\n                                        }\r\n                                    });\r\n                                });\r\n                            </script></div></div></div></div></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}

func Thread(users struct {
	UserId     uint
	Username   string
	ProfileUrl string
}, Communities []module.Communities) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var10 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var10 == nil {
			templ_7745c5c3_Var10 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = components.HeaderLogged(users).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"grid grid-cols-1 md:grid-cols-[272px_1fr]\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.SidePanel().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"w-full md:max-w-[calc(100vw-272px)] md:min-h-[calc(100vh-63px)] flex flex-col items-center mx-auto justify-start p-4\"><div class=\"w-[74%] flex flex-col items-start justify-center gap-3 my-5\"><h1 class=\"poppins-semibold text-3xl\">Créer une publication</h1><div class=\"w-full mb-4\"><ul class=\"flex gap-4\"><a href=\"/poster/post\"><li class=\"poppins-medium text-md py-1 hover:border-b-2 border-black dark:border-white cursor-pointer\">Post</li></a> <a href=\"/poster/thread\"><li class=\"poppins-medium text-md py-1 border-b-2 border-black dark:border-white cursor-pointer\">Thread</li></a> <a href=\"/register\"><li class=\"poppins-medium text-md py-1 hover:border-b-2 border-black dark:border-white cursor-pointer\">Annonces à vendre</li></a></ul></div><div class=\"w-[78%] h-full flex flex-col justify-start items-start gap-3\"><div class=\"flex flex-col w-full items-start\"><p class=\"poppins-regular text-sm\">Remplissez le formulaire ci-dessous pour créer une publication.</p></div><div class=\"w-[78%] flex justify-start items-center\"><div class=\"w-full flex flex-col gap-2 items-start\"><form hx-post=\"/add-thread\" hx-target=\"this\" hx-swap=\"outerHTML\" enctype=\"multipart/form-data\" class=\"w-full flex flex-col fade-in gap-5 justify-between items-start\" method=\"POST\"><div class=\"w-64 relative\" id=\"custom-dropdown\"><button id=\"dropdown-button\" type=\"button\" class=\"w-full p-2 border border-gray-300 dark:border-[#3F3F3F] rounded-md flex items-center justify-between text-left\"><span id=\"selected-option\" class=\"truncate\">Sélectionner la communauté</span> <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 transition-transform\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\"></path></svg></button><!-- Hidden Input to store selected community ID --><input type=\"hidden\" id=\"selectedCommunityID\" name=\"community_id\" value=\"\"><ul id=\"dropdown-options\" class=\"hidden absolute z-10 bg-white dark:bg-[#060809] w-full mt-1 border border-gray-300 dark:border-[#3F3F3F] rounded-md shadow-lg max-h-60 overflow-auto\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		for _, communitie := range Communities {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<li data-id=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var11 string
			templ_7745c5c3_Var11, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%d", communitie.CommunityID))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/register/poster.templ`, Line: 224, Col: 97}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var11))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" data-value=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var12 string
			templ_7745c5c3_Var12, templ_7745c5c3_Err = templ.JoinStringErrs(communitie.Name)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/register/poster.templ`, Line: 224, Col: 126}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var12))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" class=\"cursor-pointer select-none relative py-2 pl-3 pr-9 hover:bg-indigo-600 hover:text-white flex items-center\"><div class=\"flex items-center gap-2\"><div class=\"w-[50px] h-[50px] bg-contain bg-center overflow-hidden rounded-full\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var13 = []any{BackgroundImage(utils.Transform(communitie.CommunitiesMedia)[0], "cover")}
			templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var13...)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var14 string
			templ_7745c5c3_Var14, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var13).String())
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/register/poster.templ`, Line: 1, Col: 0}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var14))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\"></div></div><div><p class=\"text-lg poppins-semibold\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var15 string
			templ_7745c5c3_Var15, templ_7745c5c3_Err = templ.JoinStringErrs(communitie.Name)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/register/poster.templ`, Line: 230, Col: 108}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var15))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</p><p class=\"text-sm poppins-regular\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var16 string
			templ_7745c5c3_Var16, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%d", communitie.TotalJoined))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/register/poster.templ`, Line: 231, Col: 132}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var16))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(" Members</p></div></div></li>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</ul></div><input type=\"hidden\" name=\"user_id\" value=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var17 string
		templ_7745c5c3_Var17, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("%d", users.UserId))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/register/poster.templ`, Line: 238, Col: 106}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var17))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\"><div class=\"w-full flex flex-col gap-2\"><textarea class=\"py-[18px] px-2 rounded-xl w-[90%] h-[190px] max-h-[190px] focus:border-none outline-none text-xl poppins-meduim bg-[#eaedef] dark:bg-[#060809]\" id=\"message\" name=\"content\" rows=\"4\" cols=\"50\" maxlength=\"1500\" placeholder=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var18 string
		templ_7745c5c3_Var18, templ_7745c5c3_Err = templ.JoinStringErrs(fmt.Sprintf("Dire quelque chose , %s", users.Username))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/register/poster.templ`, Line: 240, Col: 328}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var18))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" oninput=\"updateCounter()\" required></textarea> <span class=\"char-counter w-full flex items-center justify-start\" id=\"charCounter\">0 / 1500</span></div><div class=\"w-full max-w-md bg-[#eaedef] dark:bg-[#060809] p-6 rounded-xl\"><div id=\"tags-container\" class=\"flex flex-wrap gap-2 mb-2\"></div><input type=\"text\" id=\"tag-input\" placeholder=\"Type a tag and press Enter\" class=\"border border-[#d5e0d5] dark:border-[#3F3F3F] dark:bg-[#0F0F0F] text-black dark:text-white focus:outline-none hover:shadow-pink-300 hover:shadow-sm focus:shadow-pink-300 focus:shadow-sm px-[20px] py-[12px] w-full rounded-xl\"> <input type=\"hidden\" id=\"hidden-tag-input\" name=\"tags\" value=\"\"></div><script>\r\n                                function updateCounter() {\r\n                                    const textarea = document.getElementById('message');\r\n                                    const counter = document.getElementById('charCounter');\r\n                                    counter.textContent = `${textarea.value.length} / 1500`;\r\n                                    }\r\n                                </script><script>\r\n                                    const tagsContainer = document.getElementById('tags-container');\r\n                                    const tagInput = document.getElementById('tag-input');\r\n                                    const HiddentagInput = document.getElementById('hidden-tag-input');\r\n                                    let tags = [];\r\n\r\n                                    function renderTags() {\r\n                                        tagsContainer.innerHTML = '';\r\n                                        tags.forEach((tag, index) => {\r\n                                            const tagElement = document.createElement('span');\r\n                                            tagElement.className = 'bg-blue-100 text-blue-800 px-2 py-1 rounded-full text-sm flex items-center';\r\n                                            tagElement.innerHTML = `\r\n                                                ${tag}\r\n                                                <button onclick=\"removeTag(${index})\" class=\"ml-1 focus:outline-none\">\r\n                                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-x\"><path d=\"M18 6 6 18\"/><path d=\"m6 6 12 12\"/></svg>\r\n                                                </button>\r\n                                            `;\r\n                                            tagsContainer.appendChild(tagElement);\r\n                                        });\r\n                                        HiddentagInput.value = tags.join()\r\n                                    }\r\n\r\n                                    function addTag(tag) {\r\n                                        if (tag.trim() !== '' && tags.length < 15) {\r\n                                            tags.push(tag.trim());\r\n                                            renderTags();\r\n                                        }\r\n                                    }\r\n\r\n                                    function removeTag(index) {\r\n                                        tags.splice(index, 1);\r\n                                        renderTags();\r\n                                    }\r\n\r\n                                    tagInput.addEventListener('keydown', function(event) {\r\n                                        if (event.key === 'Enter') {\r\n                                            event.preventDefault();\r\n                                            addTag(this.value);\r\n                                            this.value = '';\r\n                                        }\r\n                                    });\r\n                                </script><div class=\"w-full flex flex-col items-start gap-2\"><button class=\"poppins-regular bg-green-500 px-4 py-[12px] w-1/2 rounded-xl text-white hover:bg-green-700\" type=\"submit\">Publier</button></div><script>\r\n                                    document.addEventListener('DOMContentLoaded', function() {\r\n                                        const dropdownButton = document.getElementById('dropdown-button');\r\n                                        const dropdownOptions = document.getElementById('dropdown-options');\r\n                                        const selectedOption = document.getElementById('selected-option');\r\n                                        const customDropdown = document.getElementById('custom-dropdown');\r\n\r\n                                        function toggleDropdown() {\r\n                                            dropdownOptions.classList.toggle('hidden');\r\n                                            dropdownButton.querySelector('svg').classList.toggle('rotate-180');\r\n                                        }\r\n\r\n                                        dropdownButton.addEventListener('click', function(e) {\r\n                                            e.stopPropagation();\r\n                                            toggleDropdown();\r\n                                        });\r\n\r\n                                        dropdownOptions.addEventListener('click', function(e) {\r\n                                            if (e.target.tagName === 'LI') {\r\n                                                selectedOption.textContent =  e.target.dataset.value;\r\n                                                toggleDropdown();\r\n                                    \r\n                                                selectedCommunityID.value =  e.target.dataset.id;\r\n                                            }\r\n                                            e.stopPropagation();\r\n                                        });\r\n\r\n                                        // Close dropdown when clicking outside\r\n                                        document.addEventListener('click', function(e) {\r\n                                            if (!customDropdown.contains(e.target)) {\r\n                                                dropdownOptions.classList.add('hidden');\r\n                                                dropdownButton.querySelector('svg').classList.remove('rotate-180');\r\n                                            }\r\n                                        });\r\n                                    });\r\n                                </script></form></div></div></div></div></div></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
